/*
	marvinlemos@gmail.com & liliamleal@gmail.com
*/

FUNCTION_BLOCK routing	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	energy : REAL;
	path_length: REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	psl : REAL;
END_VAR

FUZZIFY energy			// Fuzzify input variable 'energy': {'low', 'medium' , 'high'}
	TERM low := (0, 1) (20000, 1) (40000, 0) ; 
	TERM average := (20000, 0) (40000, 1) (60000, 1) (80000, 0);
	TERM high := (60000, 0) (80000, 1) (100000, 1);
END_FUZZIFY

FUZZIFY path_length			// Fuzzify input variable 'path_length': { 'short', 'Medium', 'Long' }
	TERM short := (0, 1) (1, 1) (3, 0) ; 
	TERM average := (2, 0) (3, 1) (5, 1) (6, 0);
	TERM long := (5, 0) (6, 1) (9, 1);
END_FUZZIFY

DEFUZZIFY psl			// Defzzzify output variable 'psl' : {'very_poor', 'poor', 'average', 'high' }
	TERM very_poor := (0, 1) (1, 1) (3, 0);
	TERM poor := (2, 0) (3, 1) (4, 1) (5, 0);
	TERM average := (4,0) (5, 1) (6, 1) (7,0);
	TERM high := (6,0) (7, 1) (9, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF energy IS low AND path_length IS long THEN psl IS very_poor;
	RULE 2 : IF energy IS low AND path_length IS average OR path_length IS short THEN psl IS poor;
	RULE 3 : IF energy IS average AND path_length IS short THEN psl IS high;
	RULE 6 : IF energy IS average AND path_length IS average THEN psl IS average;
	RULE 7 : IF energy IS average AND path_length IS long THEN psl IS poor;
	RULE 8 : IF energy IS high AND path_length IS short THEN psl IS high;
	RULE 9 : IF energy IS high AND path_length IS average THEN psl IS high;    
	RULE 10 : IF energy IS high AND path_length IS long THEN psl IS average; 
END_RULEBLOCK

END_FUNCTION_BLOCK

